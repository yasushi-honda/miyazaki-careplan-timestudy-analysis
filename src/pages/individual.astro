---
import Layout from '../layouts/Layout.astro';
import AnalysisChart from '../components/AnalysisChart.astro';
import { getCsvData } from '../data/csvDataJson.js';

// CSVデータの読み込み
console.log('CSVデータの読み込みを開始します...');
const beforeData = getCsvData('individual_before.csv');
const afterData = getCsvData('individual_after.csv');

console.log('beforeData 件数:', beforeData.length);
console.log('afterData 件数:', afterData.length);

// 共有方法ごとの平均時間を計算
const calculateAverageTimesByMethod = (data) => {
  const methods = ["FAX", "メール", "持参", "郵送", "システム", "その他"];
  const result = {};
  
  methods.forEach(method => {
    const filteredData = data.filter(row => {
      const sharingMethod = row["ケアプラン共有方法"] || row["共有方法"];
      return sharingMethod === method;
    });
    
    if (filteredData.length === 0) {
      result[method] = 0;
      return;
    }
    
    const totalCreationTime = filteredData.reduce((sum, row) => {
      return sum + parseInt(row["1ヶ月あたりの提供票作成時間（分）"] || 0);
    }, 0);
    
    const totalConfirmationTime = filteredData.reduce((sum, row) => {
      return sum + parseInt(row["1ヶ月あたりの実績確認時間（分）"] || 0);
    }, 0);
    
    // 合計時間（分）を計算
    const totalTimeMinutes = totalCreationTime + totalConfirmationTime;
    
    // 平均時間を計算（時間単位に変換）
    result[method] = Math.round((totalTimeMinutes / filteredData.length) / 60 * 10) / 10;
  });
  
  return result;
};

const beforeTimes = calculateAverageTimesByMethod(beforeData);
const afterTimes = calculateAverageTimesByMethod(afterData);

// 全体の平均時間を計算
const calculateOverallAverages = (data) => {
  if (data.length === 0) return { creation: 0, confirmation: 0, modification: 0 };
  
  const totalCreation = data.reduce((sum, row) => sum + parseInt(row["1ヶ月あたりの提供票作成時間（分）"] || 0), 0);
  const totalConfirmation = data.reduce((sum, row) => sum + parseInt(row["1ヶ月あたりの実績確認時間（分）"] || 0), 0);
  const totalModification = data.reduce((sum, row) => sum + parseInt(row["利用者からのケアプラン修正依頼を受けてから修正完了までに要する時間（分）"] || 0), 0);
  
  return {
    creation: Math.round(totalCreation / data.length),
    confirmation: Math.round(totalConfirmation / data.length),
    modification: Math.round(totalModification / data.length)
  };
};

const beforeAverages = calculateOverallAverages(beforeData);
const afterAverages = calculateOverallAverages(afterData);

// 時間削減効果を計算
const timeReduction = {
  creation: beforeAverages.creation - afterAverages.creation,
  confirmation: beforeAverages.confirmation - afterAverages.confirmation,
  modification: beforeAverages.modification - afterAverages.modification,
  total: (beforeAverages.creation + beforeAverages.confirmation) - (afterAverages.creation + afterAverages.confirmation)
};

// 削減率を計算
const reductionPercentage = {
  creation: Math.round((timeReduction.creation / beforeAverages.creation) * 100),
  confirmation: Math.round((timeReduction.confirmation / beforeAverages.confirmation) * 100),
  modification: Math.round((timeReduction.modification / beforeAverages.modification) * 100),
  total: Math.round((timeReduction.total / (beforeAverages.creation + beforeAverages.confirmation)) * 100)
};

// 年間削減時間を計算（月間削減時間 × 12ヶ月）
const annualTimeSaved = timeReduction.total * 12;

// 年間削減時間を時間と分に変換
const annualHours = Math.floor(annualTimeSaved / 60);
const annualMinutes = annualTimeSaved % 60;
---

<Layout title="個人分析 | 宮崎県ケアプランデータ連携システム導入効果分析">
  <main class="container">
    <section class="page-header">
      <h1>個人レベルでの導入効果分析</h1>
      <p class="lead">
        ケアプランデータ連携システム導入前後での個人の業務時間変化を分析し、効率化の効果を可視化しています。
      </p>
    </section>

    <section class="key-findings card">
      <h2>主要な分析結果</h2>
      
      <div class="stats-grid">
        <div class="stat-card">
          <div class="stat-value">{timeReduction.total}分/月</div>
          <div class="stat-label">総業務時間削減</div>
          <div class="stat-description">1人あたりの月間削減時間</div>
        </div>
        
        <div class="stat-card">
          <div class="stat-value">{reductionPercentage.total}%</div>
          <div class="stat-label">業務効率化</div>
          <div class="stat-description">月間業務時間の削減率</div>
        </div>
        
        <div class="stat-card">
          <div class="stat-value">{annualHours}時間{annualMinutes}分</div>
          <div class="stat-label">年間削減時間</div>
          <div class="stat-description">1人あたりの年間削減時間</div>
        </div>
      </div>
    </section>

    <section class="time-comparison card">
      <h2>業務別時間比較</h2>
      
      <div class="comparison-table">
        <table>
          <thead>
            <tr>
              <th>業務内容</th>
              <th>導入前</th>
              <th>導入後</th>
              <th>削減時間</th>
              <th>削減率</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>提供票作成</td>
              <td>{beforeAverages.creation}分</td>
              <td>{afterAverages.creation}分</td>
              <td>{timeReduction.creation}分</td>
              <td><span class="badge badge-success">{reductionPercentage.creation}%</span></td>
            </tr>
            <tr>
              <td>実績確認</td>
              <td>{beforeAverages.confirmation}分</td>
              <td>{afterAverages.confirmation}分</td>
              <td>{timeReduction.confirmation}分</td>
              <td><span class="badge badge-success">{reductionPercentage.confirmation}%</span></td>
            </tr>
            <tr>
              <td>修正対応</td>
              <td>{beforeAverages.modification}分</td>
              <td>{afterAverages.modification}分</td>
              <td>{timeReduction.modification}分</td>
              <td><span class="badge badge-success">{reductionPercentage.modification}%</span></td>
            </tr>
            <tr class="total-row">
              <td>合計時間</td>
              <td>{beforeAverages.creation + beforeAverages.confirmation}分</td>
              <td>{afterAverages.creation + afterAverages.confirmation}分</td>
              <td>{timeReduction.total}分</td>
              <td><span class="badge badge-success">{reductionPercentage.total}%</span></td>
            </tr>
          </tbody>
        </table>
      </div>
    </section>

    <section class="chart-section card">
      <h2>共有方法別の時間比較</h2>
      <div class="chart-container">
        <AnalysisChart 
          id="analysisChart"
          chartType="bar"
          beforeData={beforeTimes}
          afterData={afterTimes}
          beforeLabel="時間（導入前）"
          afterLabel="時間（導入後）"
          yAxisLabel="時間 (時間)"
          xAxisLabel="共有方法"
          chartTitle="ケアプラン共有方法別 所要時間の比較"
        />
      </div>
      
      <div class="chart-insights">
        <h3>分析結果のポイント</h3>
        <ul>
          <li><strong>システム導入効果：</strong> システムによる共有方法が最も効率的で、FAXや郵送と比較して大幅な時間削減が実現しています。</li>
          <li><strong>全体的な効率化：</strong> すべての共有方法において導入前と比較して時間が削減されており、システム導入による間接的な効果も確認できます。</li>
          <li><strong>最大の効果：</strong> 特にFAXや郵送など物理的な媒体を使用していた場合に、システム化による効率化効果が顕著に表れています。</li>
        </ul>
      </div>
    </section>

    <section class="recommendations card">
      <h2>改善提案と今後の展望</h2>
      <div class="recommendations-content">
        <p>
          分析結果から、以下の改善提案と今後の展望が考えられます：
        </p>
        <ol>
          <li><strong>システム利用率の向上：</strong> まだシステムを利用していない事業所や個人に対して、導入支援や研修を強化することで、さらなる業務効率化が期待できます。</li>
          <li><strong>業務フロー最適化：</strong> システム導入に合わせて業務フローを見直し、さらなる効率化を図ることが重要です。</li>
          <li><strong>データ活用の促進：</strong> 蓄積されたデータを活用して、ケアプランの質向上や業務改善に役立てることができます。</li>
          <li><strong>定期的な効果測定：</strong> 継続的にタイムスタディを実施し、効果を測定・検証することで、さらなる改善点を見出すことができます。</li>
        </ol>
      </div>
    </section>

    <section class="navigation-links">
      <div class="nav-buttons">
        <a href="/" class="btn btn-outline">トップページに戻る</a>
        <a href="/business/" class="btn">事業所分析を見る</a>
      </div>
    </section>
  </main>
</Layout>

<style>
  .page-header {
    text-align: center;
    margin-bottom: 2rem;
  }

  .lead {
    font-size: 1.125rem;
    color: var(--text-secondary);
    max-width: 800px;
    margin: 0 auto;
  }

  .card {
    background-color: var(--bg-secondary);
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    padding: 1.5rem;
    margin-bottom: 2rem;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-top: 1.5rem;
  }

  .stat-card {
    background-color: var(--bg-accent);
    padding: 1.5rem;
    border-radius: var(--border-radius);
    text-align: center;
    transition: transform 0.3s ease;
  }

  .stat-card:hover {
    transform: translateY(-5px);
  }

  .stat-value {
    font-size: 2rem;
    font-weight: 700;
    color: var(--accent);
    margin-bottom: 0.5rem;
  }

  .stat-label {
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .stat-description {
    font-size: 0.875rem;
    color: var(--text-secondary);
  }

  .comparison-table {
    overflow-x: auto;
    margin-top: 1.5rem;
  }

  table {
    width: 100%;
    border-collapse: collapse;
  }

  th, td {
    padding: 0.75rem 1rem;
    text-align: left;
    border-bottom: 1px solid var(--border-color);
  }

  th {
    background-color: var(--bg-accent);
    font-weight: 600;
  }

  tr:hover {
    background-color: var(--bg-accent);
  }

  .total-row {
    font-weight: 600;
    background-color: var(--bg-accent);
  }

  .badge {
    display: inline-block;
    padding: 0.25rem 0.5rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 500;
  }

  .badge-success {
    background-color: var(--success);
    color: white;
  }

  .chart-container {
    margin-top: 1.5rem;
    margin-bottom: 2rem;
  }

  .chart-insights {
    background-color: var(--bg-accent);
    padding: 1.5rem;
    border-radius: var(--border-radius);
    margin-top: 1.5rem;
  }

  .chart-insights h3 {
    margin-bottom: 1rem;
  }

  .chart-insights ul {
    padding-left: 1.5rem;
  }

  .chart-insights li {
    margin-bottom: 0.75rem;
  }

  .recommendations-content {
    margin-top: 1rem;
  }

  .recommendations-content ol {
    padding-left: 1.5rem;
    margin-top: 1rem;
  }

  .recommendations-content li {
    margin-bottom: 1rem;
  }

  .navigation-links {
    margin-top: 3rem;
    margin-bottom: 2rem;
  }

  .nav-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
  }

  @media (max-width: 768px) {
    .nav-buttons {
      flex-direction: column;
      align-items: center;
    }
    
    .stat-value {
      font-size: 1.75rem;
    }
    
    table {
      font-size: 0.875rem;
    }
    
    th, td {
      padding: 0.5rem;
    }
  }
</style>
